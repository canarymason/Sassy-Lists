// Sass list sorting support
@function sort-list($list, $dir: "asc") {
  // built-in list sorting in Sass would make this go away.
  // declare some empty lists to put our new order and temporary values
  $new-order: ;
  $temp: ;
  // fill $temp with the contents of $list
  $temp: join($temp, $list);
  // if sorting ascending
  @if $dir == "asc" {
    // loop through all values in $list
    @for $i from 1 through length($list) {
      // impossibly high starter value to compare
      $low: 1000000;
      // check for lowest value in $temp
      @for $j from 1 through length($temp) {
        @if nth($temp, $j) < $low {
          $low: nth($temp, $j); } }
      // add lowest value to $new-order
      $new-order: append($new-order, $low);
      // empty $temp for the next comparison
      $temp: ;
      // re-populate $temp with remaining values to sort
      @for $k from 1 through length($list) {
        @if nth($list, $k) > $low {
          $temp: append($temp, nth($list, $k)); } } } }
  @if $dir == "dec" {
    // loop through all values in $list
    @for $i from 1 through length($list) {
      // 0 starter value
      $high: 0;
      // check for highest value in $temp
      @for $j from 1 through length($temp) {
        @if nth($temp, $j) > $high {
          $high: nth($temp, $j); } }
      $new-order: append($new-order, $high);
      // empty $temp for the next comparison
      $temp: ;
      // re-populate $temp with remaining values to sort
      @for $k from 1 through length($list) {
        @if nth($list, $k) < $high {
          $temp: append($temp, nth($list, $k)); } } } }
  @return $new-order; }

// Sass list trimming support
@function trim-list($list, $start, $dir: "asc") {
  // built-in list trimming in Sass would make this go away.
  // declare some empty lists to put our trimmed values
  $trimmed: ;
  // if sorting ascending
  @if $dir == "asc" {
    // loop through all values in $list
    @for $i from 1 through length($list) {
      @if nth($list, $i) >= $start {
        $trimmed: append($trimmed, nth($list, $i)); } } }
  @if $dir == "dec" {
    // loop through all values in $list
    @for $i from 1 through length($list) {
      @if nth($list, $i) <= $start {
        $trimmed: append($trimmed, nth($list, $i)); } } }
  @return $trimmed; }
